# Copyright 2023 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

parameters:
  - name: Instance
    type: string
    default: "local"    # e.g. aws or local.
  - name: Platform
    type: string
    default: "azure"    # The platform to build for (e.g. azure, gcp, aws)
  - name: BuildFlavour
    type: string
    default: "prod"     # prod or non_prod - influences logging and verbosity.
  - name: Service
    type: string
    default: ""         # The name of the service to build a TEE for.
                        # e.g. auction_service, bidding_service, buyer_frontend_service, seller_frontend_service.
  - name: Verbose
    type: boolean
    default: false      # true/false - should build be done verbosly or not.
  - name: BazelExtraArgs
    type: string
    default: ""         # Specify extra args for Bazel builds
  - name: BazelCipdVersion
    type: string
    default: "6.3.2.cr0" # Bazel version to use.

steps:
# Setup the build env with the required tools.
- template: ..\templates\get-cipd.yml
- template: ..\templates\get-bazel.yml
  parameters:
    BazelVersion: ${{ parameters.BazelCipdVersion }}

# The steps below follow the same path a local build would take in:
# /production/packaging/build_and_test_all_in_docker

# Perform the actual build & test steps
- script: sudo yum install -y gettext
  displayName: 'Install required OS packages'

- script: df -h
  displayName: 'Check Disk Space/Layout'

- script: |
    sudo ln -s $(Agent.TempDirectory)/bazel_root /bazel_root

    sudo mv ${HOME}/.cache ${HOME}/.cache_bak
    sudo ln -s $(Agent.TempDirectory)/.cache ${HOME}/.cache
    sudo mkdir $(Agent.TempDirectory)/.cache/
    sudo mv ${HOME}/.cache_bak/* $(Agent.TempDirectory)/.cache/

    sudo mkdir /src
    sudo ln -s $(Agent.TempDirectory)/src_workspace /src/workspace
  displayName: 'Redirecting folders off OS drive to tmp drive'

- script: |
    printf "\n\n===== / =====\n"
    ls -alh /
    printf "\n\n===== ${HOME} =====\n"
    ls -alh ${HOME}
    printf "\n\n===== /src =====\n"
    ls -alh /src
  displayName: 'List dirs to see redirections'

- task: Bash@3
  inputs:
    workingDirectory: $(Agent.WorkFolder)/1/s/
    targetType: 'inline'
    continueOnError: true
    script: |
      export BAZEL_EXTRA_ARGS="${{ parameters.BazelExtraArgs }} --test_output=all --test_summary=detailed"

      declare VERBOSE_ARG=
      if [[ ${{ parameters.Verbose }} -eq True ]]; then
        VERBOSE_ARG="--verbose"
      fi

      production/packaging/build_and_test_all_in_docker ${VERBOSE_ARG} --service-path ${{ parameters.Service }} --instance ${{ parameters.Instance }} --platform ${{ parameters.Platform }} --no-precommit  --build-flavor ${{ parameters.BuildFlavour }} 2>&1 | tee
  displayName: Run Bazel Build & Test Scripts

- script: |
    sudo mkdir $(Agent.TempDirectory)/build_logs
    sudo cp -R $(Agent.WorkFolder)/1/s/*.log $(Agent.TempDirectory)/build_logs/
    sudo cp -R $(Agent.WorkFolder)/1/s/dist/* $(Agent.TempDirectory)/build_logs/
    sudo chmod 755 $(Agent.TempDirectory)/build_logs/*
  displayName: 'Copy logs to artifact location'

- task: ExtractFiles@1
  displayName: Extract Test Logs
  inputs:
    archiveFilePatterns: $(Agent.TempDirectory)/build_logs/logs.zip
    destinationFolder: $(Agent.TempDirectory)/final-logs
    cleanDestinationFolder: true

# Upload test results to ADO
- task: PublishTestResults@2
  inputs:
    publishRunAttachments: true
    testResultsFiles: "**/sponge_log.xml"
    testRunTitle: "${{ parameters.Instance }} ${{ parameters.Platform }} ${{ parameters.Service }}-${{ parameters.BuildFlavour }}"
    searchFolder: $(Agent.TempDirectory)/final-logs/test
  displayName: Publish Test Results
