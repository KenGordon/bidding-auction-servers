#!/busybox/sh
# Portions Copyright (c) Microsoft Corporation
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

set -o errexit
set -x

#########################################################################
#                                                                       #
#                            Envoy Startup                              #
#                                                                       #
#########################################################################

# Start envoy.

# Parameters to be deleted
# - MANAGED_IDENTITY_CLIENT_ID: This is to support development on azure instances with multiple user-assigned identities.
# - SELF_SIGNED_ENVOY_CERT

if [ "$SELF_SIGNED_ENVOY_CERT" == "true" ]; then
    cur_dir=$(pwd)
    cd /etc/envoy
    openssl req -x509 -newkey rsa:4096 -keyout key.pem -out cert.pem -sha256 -days 3650 -nodes -subj "/C=XX/ST=StateName/L=CityName/O=CompanyName/OU=CompanySectionName/CN=www.testenvoy.com"
    cd "$curl_dir"
else
    if [ -n "$MANAGED_IDENTITY_CLIENT_ID" ]; then
        MANAGED_IDENTITY_CLIENT_ID_PARAM="&client_id=${MANAGED_IDENTITY_CLIENT_ID}"
    fi

    # Get subscription ID (to be used for getting the key vault name)
    SUBSCRIPTION_ID=$(wget -q --header "Metadata:true"  --output-document - \
    http://169.254.169.254/metadata/instance?api-version=2021-02-01 | \
    /server/bin/jq -r .compute.subscriptionId)

    # The key vault needs to be named as the following so that
    # it can be specified with subscription ID.
    # 'pa' stands for Protected Audience.
    # We truncate SUBSCRIPTION_ID_NO_DASH from 36 to 22 so that the name fits in the max length (24 characters).
    # Strictly speaking collisions could happen among subscriptions, but it should be fine because even in such cases
    # it would be detected when creating the key vault.
    SUBSCRIPTION_ID_NO_DASH=${SUBSCRIPTION_ID//-}
    echo "TEST_TAKURO: SUBSCRIPTION_ID_NO_DASH: $SUBSCRIPTION_ID_NO_DASH"
    KEY_VAULT_NAME=pa${SUBSCRIPTION_ID_NO_DASH:0:22}

    echo "TEST_TAKURO: key vault name: $KEY_VAULT_NAME"

    # Get credentials (to be used for getting operator and environment)
    ACCESS_TOKEN=$(wget -q --header "Metadata:true"  --output-document -  \
    "http://169.254.169.254/metadata/identity/oauth2/token?api-version=2018-02-01&resource=https%3A%2F%2Fmanagement.azure.com${MANAGED_IDENTITY_CLIENT_ID_PARAM}" \
    | /server/bin/jq -r '.access_token')

    RESOURCE_ID=$(wget -q --header "Metadata:true"  --output-document - \
    http://169.254.169.254/metadata/instance?api-version=2021-02-01 | jq .compute.resourceId -r)

    OPERATOR=$(wget -q --header "Authorization: Bearer ${ACCESS_TOKEN}" --output-document - \
    https://management.azure.com${RESOURCE_ID}/providers/Microsoft.Resources/tags/default?api-version=2021-04-01 \
    | /server/bin/jq -r '.properties.tags.operator')

    ENV=$(wget -q --header "Authorization: Bearer ${ACCESS_TOKEN}" --output-document - \
    https://management.azure.com${RESOURCE_ID}/providers/Microsoft.Resources/tags/default?api-version=2021-04-01 \
    | /server/bin/jq -r '.properties.tags.environment')

    # Get credentials (to be used for fetching secrets)
    ACCESS_TOKEN=$(wget -q --header "Metadata:true"  --output-document -  \
    "http://169.254.169.254/metadata/identity/oauth2/token?api-version=2018-02-01&resource=https%3A%2F%2Fvault.azure.net${MANAGED_IDENTITY_CLIENT_ID_PARAM}" \
    | /server/bin/jq -r '.access_token')

    # Get our secrets, parse, decode, and write the secret strings to files that the Envoy config will read.
    ## TLS Key
    wget -q --header "Authorization: Bearer ${ACCESS_TOKEN}" --output-document - \
    https://${KEY_VAULT_NAME}.vault.azure.net/secrets/${OPERATOR}-${ENV}-SFE_TLS_KEY?api-version=7.4 \
    | /server/bin/jq -r ".value"
    | base64 -d > /etc/envoy/key.pem

    ## TLS Cert
    wget -q --header "Authorization: Bearer ${ACCESS_TOKEN}" --output-document - \
    https://${KEY_VAULT_NAME}.vault.azure.net/secrets/${OPERATOR}-${ENV}-SFE_TLS_CERT?api-version=7.4 \
    | /server/bin/jq -r ".value"
    | base64 -d > /etc/envoy/cert.pem
fi

/usr/local/bin/envoy --config-path /etc/envoy/envoy.yaml -l warn &
sleep 2

#########################################################################
#                                                                       #
#                             SFE Startup                               #
#                                                                       #
#########################################################################


export GLOG_logtostderr=1
export GLOG_stderrthreshold=0
export GRPC_DNS_RESOLVER=native

# Start the server.
/server/bin/server  --init_config_client=true
