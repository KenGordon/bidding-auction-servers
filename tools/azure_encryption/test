#!/bin/bash

# Environment variables:
# - NO_CBUILD: When the value is `1`, it doesn't use cbuild tool and use bazel directly.

set -ex
DIR_OF_THIS_FILE=$(cd $(dirname $0); pwd)
PROJECT_ROOT=$DIR_OF_THIS_FILE/../..
cd $PROJECT_ROOT

PRIVACY_SANDBOX_DEV_DIR=$PROJECT_ROOT/..

check_kms_port_available() {
    local PORT=8000
    if command -v lsof > /dev/null; then
        if lsof -i :$PORT > /dev/null; then
            echo "Port $PORT is already in use. Can't start KMS."
            echo 'You can use `make kms-kill` to kill existing KMS if you are using privacy-sandbox-dev.'
            return 1
        else
            return 0
        fi
    else
        echo "lsof command not found. Unable to check if port $PORT is already in use."
        return 1
    fi
}

check_kms_port_available

if [[ "$NO_CBUILD" == "1" ]]; then
    COMMAND="bazel"
else
    COMMAND="builders/tools/bazel-debian"
fi

$COMMAND build //tools/azure_encryption:azure_encryption_test --config=azure_azure --//:build_flavor=non_prod
./bazel-bin/tools/azure_encryption/azure_encryption_test --kms_startup_command="$PRIVACY_SANDBOX_DEV_DIR/scripts/kms_run.sh" --kms_create_key_command="$PRIVACY_SANDBOX_DEV_DIR/scripts/kms_create_key.sh"
